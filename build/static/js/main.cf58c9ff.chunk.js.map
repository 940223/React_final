{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorials-list.component.js","components/tutorial.component.js","components/login.js","components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","components/AddToFavourites.js","components/RemoveFavourites.js","components/favorites.js","components/Movie.js","App.js","serviceworker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","name","AddTutorial","props","onChangeTitle","bind","onChangepw","saveTutorial","newTutorial","state","pw","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","anme","className","onClick","htmlFor","type","required","onChange","Component","TutorialsList","onChangeSearchname","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchname","tutorials","currentTutorial","currentIndex","getAll","tutorial","index","deleteAll","findByName","map","login1","handleChange","handleSubmit","user","back_user","back_pw","event","alert","preventDefault","onSubmit","IconButton","color","aria-label","TextField","label","variant","MovieList","FavouriteComponent","favouriteComponent","movies","movie","Title","src","Poster","alt","handleFavouritesClick","MovieListHeading","heading","SearchBox","setSearchValue","placeholder","AddFavourite","width","height","viewBox","class","fill","xmlns","fill-rule","d","RemoveFavourites","Favorite","useState","favourites","setFavourites","saveToLocalStorage","items","JSON","parse","localStorage","getItem","useEffect","movieFavourites","newFavouriteList","filter","favourite","imdbID","Movie","setMovies","searchValue","getMovieRequest","a","url","fetch","json","responseJson","Search","setItem","stringify","AddFavourites","ReactGA","initialize","debug","titleCase","gaOptions","userId","pageview","window","location","pathname","search","App","href","to","exact","path","component","Login","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cf58c9ff.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://djfinal.herokuapp.com/api/user\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(``);\r\n  }\r\n\r\n  findByName(name) {\r\n    return http.get(`?name=${name}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangepw = this.onChangepw.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      pw: \"\", \r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangepw(e) {\r\n    this.setState({\r\n      pw: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      name: this.state.name,\r\n      pw: this.state.pw\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          pw: response.data.pw,\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      anme: \"\",\r\n      pw: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"name\">Name</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeTitle}\r\n                name=\"name\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"pw\">PW</label>\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                id=\"pw\"\r\n                required\r\n                value={this.state.pw}\r\n                onChange={this.onChangepw}\r\n                name=\"pw\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchname = this.onChangeSearchname.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.searchname = this.searchname.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchname: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  onChangeSearchname(e) {\r\n    const searchname = e.target.value;\r\n\r\n    this.setState({\r\n      searchname: searchname\r\n    });\r\n  }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchname() {\r\n    TutorialDataService.findByName(this.state.searchname)\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchname, tutorials, currentTutorial, currentIndex } = this.state;\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-6\">\r\n          <h4>User List</h4>\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                  {tutorial.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTutorial ? (\r\n            <div>\r\n              <h4>Detail</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>name:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>pw:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.pw}\r\n              </div>\r\n             \r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p></p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n/*\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by name\"\r\n              value={searchname}\r\n              onChange={this.onChangeSearchname}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchname}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n              <Link\r\n                to={\"/tutorials/\" + currentTutorial.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n               <div>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n*/","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class User extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTutorial: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The user was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {    \r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/tutorials')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Detail</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentTutorial.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentTutorial.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentTutorial.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTutorial}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p></p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Lock from '@material-ui/icons/Lock';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\n\r\n\r\n\r\n\r\nexport default class login1 extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            user:\"\",\r\n            pw:\"\",\r\n            back_user:\"\",\r\n            back_pw:\"\"\r\n        };\r\n      }\r\n      handleChange(event) {\r\n        // event.target 是當前的 DOM elment\r\n        // 從 event.target.value 取得 user 剛輸入的值\r\n        // 將 user 輸入的值更新回 state\r\n        this.setState({user: event.target.value});\r\n        //alert(event.target.value);\r\n      }\r\n      handlepwChange(event) {\r\n        // event.target 是當前的 DOM elment\r\n        // 從 event.target.value 取得 user 剛輸入的值\r\n        // 將 user 輸入的值更新回 state\r\n        this.setState({pw: event.target.value});\r\n        \r\n        //alert(event.target.value);\r\n      }\r\n      // form onSubmit 事件處理函式\r\n      handleSubmit(event) {\r\n        if(true){\r\n            alert('登入 ' + this.state.user+'\\n');\r\n        \r\n        //alert(this.back_user.pw);\r\n        \r\n        }\r\n        else{\r\n        }\r\n        event.preventDefault();\r\n      }\r\n      \r\n  setActiveTutorial(user) {\r\n    this.setState({\r\n        back_user: user,\r\n      //currentIndex: index\r\n    });\r\n    alert(this.state.back_user);\r\n  }\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}>\r\n            <div className=\"submit-form\" >\r\n                <IconButton color=\"primary\" aria-label=\"Add a Lock icon\"><Lock /></IconButton>\r\n                <br></br>\r\n                <TextField id=\"outlined-basic\" value={this.state.value} onChange={this.handleChange} label=\"Id\" variant=\"outlined\" />\r\n                <br></br>\r\n                <p></p>\r\n                <TextField id=\"outlined-basic\"  label=\"Password\" variant=\"outlined\" />\r\n                <br></br>\r\n                <p></p>\r\n                <input type=\"submit\" value=\"Submit\"  />\r\n            </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n/*<Button variant=\"contained\" color=\"primary\">SIGN IN</Button> */","import React from 'react';\r\n\r\nconst MovieList = (props) => {\r\n\tconst FavouriteComponent = props.favouriteComponent;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{props.movies.map((movie, index) => (\r\n\t\t\t\t<div className='image-container d-flex justify-content-start m-3'>\r\n\t\t\t\t\t<h4>{movie.Title}</h4>\r\n\t\t\t\t\t<img src={movie.Poster} alt='movie'></img>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => props.handleFavouritesClick(movie)}\r\n\t\t\t\t\t\tclassName='overlay d-flex align-items-center justify-content-center'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<FavouriteComponent />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst MovieListHeading = (props) => {\r\n\treturn (\r\n\t\t<div className='col'>\r\n\t\t\t<h4>{props.heading}</h4>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default MovieListHeading;","import React from 'react';\r\n\r\nconst SearchBox = (props) => {\r\n\treturn (\r\n\t\t<div className='col col-sm-4'>\r\n\t\t\t<input\r\n\t\t\t\tclassName='form-control'\r\n\t\t\t\tvalue={props.value}\r\n\t\t\t\tonChange={(event) => props.setSearchValue(event.target.value)}\r\n\t\t\t\tplaceholder='Search Movies...'\r\n\t\t\t></input>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst AddFavourite = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className='mr-2'>Add to Favourites</span>\r\n\t\t\t<svg\r\n\t\t\t\twidth='1em'\r\n\t\t\t\theight='1em'\r\n\t\t\t\tviewBox='0 0 16 16'\r\n\t\t\t\tclass='bi bi-heart-fill'\r\n\t\t\t\tfill='red'\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\t\td='M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AddFavourite;","import React from 'react';\r\n\r\nconst RemoveFavourites = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className='mr-2'>Remove from favourites</span>\r\n\t\t\t<svg\r\n\t\t\t\twidth='1em'\r\n\t\t\t\theight='1em'\r\n\t\t\t\tviewBox='0 0 16 16'\r\n\t\t\t\tclass='bi bi-x-square'\r\n\t\t\t\tfill='currentColor'\r\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\r\n\t\t\t>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\t\td='M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z'\r\n\t\t\t\t/>\r\n\t\t\t\t<path\r\n\t\t\t\t\tfill-rule='evenodd'\r\n\t\t\t\t\td='M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z'\r\n\t\t\t\t/>\r\n\t\t\t</svg>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default RemoveFavourites;","import React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../Movie.css';\r\nimport MovieList from '../components/MovieList';\r\nimport MovieListHeading from '../components/MovieListHeading';\r\n//import SearchBox from '../components/SearchBox';\r\n//import AddFavourites from '../components/AddToFavourites';\r\nimport RemoveFavourites from '../components/RemoveFavourites';\r\n\r\n\r\nconst Favorite = () => {\r\n    const [movies, setMovies] = useState([]);\r\n\tconst [searchValue, setSearchValue] = useState('');\r\n\tconst [favourites, setFavourites] = useState([]);\r\n    const removeFavouriteMovie = (movie) => {\r\n\t\tconst newFavouriteList = favourites.filter(\r\n\t\t\t(favourite) => favourite.imdbID !== movie.imdbID\r\n\t\t);\r\n\t\tsetFavourites(newFavouriteList);\r\n\t\tsaveToLocalStorage(newFavouriteList);\r\n\t};\r\n    const saveToLocalStorage = (items) => {\r\n\t\t//localStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\r\n\t\tconsole.log(JSON.parse(localStorage.getItem('react-movie-app-favourites')));\r\n\t};\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst movieFavourites = JSON.parse(\r\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\r\n\t\t);\r\n\r\n\t\tsetFavourites(movieFavourites);\r\n\t}, []);\r\n    console.log(JSON.parse(localStorage.getItem('react-movie-app-favourites')));\r\n    return (\r\n        <div className='container-fluid movie-app'>\r\n    <div className='row d-flex align-items-center mt-4 mb-4'>\r\n\t\t\t\t<MovieListHeading heading='Favourites' />\r\n\t\t\t</div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<MovieList\r\n\t\t\t\t\tmovies={favourites}\r\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\r\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n            </div>\r\n            );\r\n};\r\n\r\nexport default Favorite;","import React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../Movie.css';\nimport MovieList from '../components/MovieList';\nimport MovieListHeading from '../components/MovieListHeading';\nimport SearchBox from '../components/SearchBox';\nimport AddFavourites from '../components/AddToFavourites';\n//import RemoveFavourites from '../components/RemoveFavourites';\nimport Favorite from '../components/favorites'\nconst Movie = () => {\n\tvar dataUrl = \"https://djfinal.herokuapp.com/api/user\";\n\t//let array = ['asd', 123, true];\n\tconst [movies, setMovies] = useState([]);\n\tconst [searchValue, setSearchValue] = useState('');\n\tconst [favourites, setFavourites] = useState([]);\n\t//Favorite();\n\t//localStorage.setItem('item3', JSON.stringify(array));\n\t//console.log(JSON.parse(localStorage.getItem('item3')));\n\tconst getMovieRequest = async (searchValue) => {\n\t\tconst url = `http://www.omdbapi.com/?s=${searchValue}&apikey=c447ddb3`;\n\n\t\tconst response = await fetch(url);\n\t\tconst responseJson = await response.json();\n\n\t\tif (responseJson.Search) {\n\t\t\tsetMovies(responseJson.Search);\n\t\t}\n\t};\n\tconst saveToLocalStorage = (items) => {\n\t\tlocalStorage.setItem('react-movie-app-favourites', JSON.stringify(items));\n\t\tconsole.log(JSON.parse(localStorage.getItem('react-movie-app-favourites')));\n\t};\n\tconst addFavouriteMovie = (movie) => {\n\t\tconst newFavouriteList = [...favourites, movie];\n\t\tsetFavourites(newFavouriteList);\n\t\tsaveToLocalStorage(newFavouriteList);\n\t\t\n\t};\n\n\tconst removeFavouriteMovie = (movie) => {\n\t\tconst newFavouriteList = favourites.filter(\n\t\t\t(favourite) => favourite.imdbID !== movie.imdbID\n\t\t);\n\t\tsetFavourites(newFavouriteList);\n\t\tsaveToLocalStorage(newFavouriteList);\n\t};\n\n\tuseEffect(() => {\n\t\tgetMovieRequest(searchValue);\n\t}, [searchValue]);\n\tuseEffect(() => {\n\t\tconst movieFavourites = JSON.parse(\n\t\t\tlocalStorage.getItem('react-movie-app-favourites')\n\t\t);\n\t\tsetFavourites(movieFavourites);\n\t}, []);\n\treturn (\n\t\t<div className='container-fluid movie-app'>\n\t\t\t<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Movies' />\n\t\t\t\t<SearchBox searchValue={searchValue} setSearchValue={setSearchValue} />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={movies}\n\t\t\t\t\tfavouriteComponent={AddFavourites}\n\t\t\t\t\thandleFavouritesClick={addFavouriteMovie}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t</div>\n\t);\n};\n\nexport default Movie;\n/*<div className='row d-flex align-items-center mt-4 mb-4'>\n\t\t\t\t<MovieListHeading heading='Favourites' />\n\t\t\t</div>\n\t\t\t<div className='row'>\n\t\t\t\t<MovieList\n\t\t\t\t\tmovies={favourites}\n\t\t\t\t\thandleFavouritesClick={removeFavouriteMovie}\n\t\t\t\t\tfavouriteComponent={RemoveFavourites}\n\t\t\t\t/>\n\t\t\t</div>\n*/","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport User from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\nimport Login from \"./components/login\";\nimport Movie from \"./components/Movie.js\"\n//import Login from \"./index1\";\nimport Favorite from './components/favorites'\nimport ReactGA from 'react-ga';\nReactGA.initialize('G-MHWCPJES7K', {\n  debug: true,\n  titleCase: false,\n  gaOptions: {\n    userId: 123\n  }\n});\nReactGA.pageview(window.location.pathname + window.location.search);\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/movie\" className=\"navbar-brand\">\n            電影牆\n          </a>  \n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n            <Link to={\"/movie\"} className=\"nav-link\">\n                movie\n            </Link>  \n            </li>\n\n            <li className=\"nav-item\">\n            <Link to={\"/favorite\"} className=\"nav-link\">\n              favorite\n            </Link>  \n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/User\"} className=\"nav-link\">\n                all_users\n              </Link>\n            </li>\n\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Sign Up\n              </Link>\n            </li>\n\n            \n            <li className=\"nav-item\">\n            <Link to={\"/login\"} className=\"nav-link\">\n                Login\n            </Link>  \n            </li>\n\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/User\"]} component={TutorialsList} />\n            <Route exact path=\"/movie\" component={Movie} />\n            <Route exact path=\"/Favorite\" component={Favorite} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route exact path=\"/login\" component={Login} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceworker.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}