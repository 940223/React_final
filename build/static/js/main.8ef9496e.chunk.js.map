{"version":3,"sources":["http-common.js","services/tutorial.service.js","components/add-tutorial.component.js","components/tutorial.component.js","components/tutorials-list.component.js","App.js","serviceworker.js","index.js"],"names":["axios","create","baseURL","headers","http","get","id","data","post","put","delete","name","AddTutorial","props","onChangeTitle","bind","onChangepw","saveTutorial","newTutorial","state","pw","submitted","e","this","setState","target","value","TutorialDataService","then","response","console","log","catch","anme","className","onClick","htmlFor","type","required","onChange","Component","Tutorial","onChangeDescription","getTutorial","updatePublished","updateTutorial","deleteTutorial","currentTutorial","title","description","published","message","match","params","prevState","status","update","history","push","TutorialsList","onChangeSearchTitle","retrieveTutorials","refreshList","setActiveTutorial","removeAllTutorials","searchTitle","tutorials","currentIndex","getAll","tutorial","index","deleteAll","findByName","placeholder","map","to","App","href","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.8ef9496e.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://djfinal.herokuapp.com/api/user\",\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass TutorialDataService {\r\n  getAll() {\r\n    return http.get(\"\");\r\n  }\r\n\r\n  get(id) {\r\n    return http.get(`${id}`);\r\n  }\r\n\r\n  create(data) {\r\n    return http.post(\"\", data);\r\n  }\r\n\r\n  update(id, data) {\r\n    return http.put(`${id}`, data);\r\n  }\r\n\r\n  delete(id) {\r\n    return http.delete(`${id}`);\r\n  }\r\n\r\n  deleteAll() {\r\n    return http.delete(``);\r\n  }\r\n\r\n  findByName(name) {\r\n    return http.get(`?name=${name}`);\r\n  }\r\n}\r\n\r\nexport default new TutorialDataService();","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class AddTutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangepw = this.onChangepw.bind(this);\r\n    this.saveTutorial = this.saveTutorial.bind(this);\r\n    this.newTutorial = this.newTutorial.bind(this);\r\n\r\n    this.state = {\r\n      id: null,\r\n      name: \"\",\r\n      pw: \"\", \r\n\r\n      submitted: false\r\n    };\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    this.setState({\r\n      name: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangepw(e) {\r\n    this.setState({\r\n      pw: e.target.value\r\n    });\r\n  }\r\n\r\n  saveTutorial() {\r\n    var data = {\r\n      name: this.state.name,\r\n      pw: this.state.pw\r\n    };\r\n\r\n    TutorialDataService.create(data)\r\n      .then(response => {\r\n        this.setState({\r\n          id: response.data.id,\r\n          name: response.data.name,\r\n          pw: response.data.pw,\r\n          submitted: true\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  newTutorial() {\r\n    this.setState({\r\n      id: null,\r\n      anme: \"\",\r\n      pw: \"\",\r\n      submitted: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"submit-form\">\r\n        {this.state.submitted ? (\r\n          <div>\r\n            <h4>You submitted successfully!</h4>\r\n            <button className=\"btn btn-success\" onClick={this.newTutorial}>\r\n              Add\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"title\"\r\n                required\r\n                value={this.state.name}\r\n                onChange={this.onChangeTitle}\r\n                name=\"title\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"description\">Description</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"description\"\r\n                required\r\n                value={this.state.pw}\r\n                onChange={this.onChangepw}\r\n                name=\"description\"\r\n              />\r\n            </div>\r\n\r\n            <button onClick={this.saveTutorial} className=\"btn btn-success\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\n\r\nexport default class Tutorial extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTitle = this.onChangeTitle.bind(this);\r\n    this.onChangeDescription = this.onChangeDescription.bind(this);\r\n    this.getTutorial = this.getTutorial.bind(this);\r\n    this.updatePublished = this.updatePublished.bind(this);\r\n    this.updateTutorial = this.updateTutorial.bind(this);\r\n    this.deleteTutorial = this.deleteTutorial.bind(this);\r\n\r\n    this.state = {\r\n      currentTutorial: {\r\n        id: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        published: false\r\n      },\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTutorial(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTitle(e) {\r\n    const title = e.target.value;\r\n\r\n    this.setState(function(prevState) {\r\n      return {\r\n        currentTutorial: {\r\n          ...prevState.currentTutorial,\r\n          title: title\r\n        }\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeDescription(e) {\r\n    const description = e.target.value;\r\n    \r\n    this.setState(prevState => ({\r\n      currentTutorial: {\r\n        ...prevState.currentTutorial,\r\n        description: description\r\n      }\r\n    }));\r\n  }\r\n\r\n  getTutorial(id) {\r\n    TutorialDataService.get(id)\r\n      .then(response => {\r\n        this.setState({\r\n          currentTutorial: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updatePublished(status) {\r\n    var data = {\r\n      id: this.state.currentTutorial.id,\r\n      title: this.state.currentTutorial.title,\r\n      description: this.state.currentTutorial.description,\r\n      published: status\r\n    };\r\n\r\n    TutorialDataService.update(this.state.currentTutorial.id, data)\r\n      .then(response => {\r\n        this.setState(prevState => ({\r\n          currentTutorial: {\r\n            ...prevState.currentTutorial,\r\n            published: status\r\n          }\r\n        }));\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateTutorial() {\r\n    TutorialDataService.update(\r\n      this.state.currentTutorial.id,\r\n      this.state.currentTutorial\r\n    )\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.setState({\r\n          message: \"The tutorial was updated successfully!\"\r\n        });\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  deleteTutorial() {    \r\n    TutorialDataService.delete(this.state.currentTutorial.id)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.props.history.push('/tutorials')\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { currentTutorial } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {currentTutorial ? (\r\n          <div className=\"edit-form\">\r\n            <h4>Tutorial</h4>\r\n            <form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"title\">Title</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"title\"\r\n                  value={currentTutorial.title}\r\n                  onChange={this.onChangeTitle}\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  value={currentTutorial.description}\r\n                  onChange={this.onChangeDescription}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>\r\n                  <strong>Status:</strong>\r\n                </label>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n            </form>\r\n\r\n            {currentTutorial.published ? (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(false)}\r\n              >\r\n                UnPublish\r\n              </button>\r\n            ) : (\r\n              <button\r\n                className=\"badge badge-primary mr-2\"\r\n                onClick={() => this.updatePublished(true)}\r\n              >\r\n                Publish\r\n              </button>\r\n            )}\r\n\r\n            <button\r\n              className=\"badge badge-danger mr-2\"\r\n              onClick={this.deleteTutorial}\r\n            >\r\n              Delete\r\n            </button>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"badge badge-success\"\r\n              onClick={this.updateTutorial}\r\n            >\r\n              Update\r\n            </button>\r\n            <p>{this.state.message}</p>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <br />\r\n            <p>Please click on a Tutorial...</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\r\nimport TutorialDataService from \"../services/tutorial.service\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class TutorialsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\r\n    this.retrieveTutorials = this.retrieveTutorials.bind(this);\r\n    this.refreshList = this.refreshList.bind(this);\r\n    this.setActiveTutorial = this.setActiveTutorial.bind(this);\r\n    this.removeAllTutorials = this.removeAllTutorials.bind(this);\r\n    this.searchTitle = this.searchTitle.bind(this);\r\n\r\n    this.state = {\r\n      tutorials: [],\r\n      currentTutorial: null,\r\n      currentIndex: -1,\r\n      searchTitle: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.retrieveTutorials();\r\n  }\r\n\r\n  onChangeSearchTitle(e) {\r\n    const searchTitle = e.target.value;\r\n\r\n    this.setState({\r\n      searchTitle: searchTitle\r\n    });\r\n  }\r\n\r\n  retrieveTutorials() {\r\n    TutorialDataService.getAll()\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  refreshList() {\r\n    this.retrieveTutorials();\r\n    this.setState({\r\n      currentTutorial: null,\r\n      currentIndex: -1\r\n    });\r\n  }\r\n\r\n  setActiveTutorial(tutorial, index) {\r\n    this.setState({\r\n      currentTutorial: tutorial,\r\n      currentIndex: index\r\n    });\r\n  }\r\n\r\n  removeAllTutorials() {\r\n    TutorialDataService.deleteAll()\r\n      .then(response => {\r\n        console.log(response.data);\r\n        this.refreshList();\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  searchTitle() {\r\n    TutorialDataService.findByName(this.state.searchTitle)\r\n      .then(response => {\r\n        this.setState({\r\n          tutorials: response.data\r\n        });\r\n        console.log(response.data);\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { searchTitle, tutorials, currentTutorial, currentIndex } = this.state;\r\n\r\n    return (\r\n      <div className=\"list row\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search by title\"\r\n              value={searchTitle}\r\n              onChange={this.onChangeSearchTitle}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                className=\"btn btn-outline-secondary\"\r\n                type=\"button\"\r\n                onClick={this.searchTitle}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <h4>Tutorials List</h4>\r\n\r\n          <ul className=\"list-group\">\r\n            {tutorials &&\r\n              tutorials.map((tutorial, index) => (\r\n                <li\r\n                  className={\r\n                    \"list-group-item \" +\r\n                    (index === currentIndex ? \"active\" : \"\")\r\n                  }\r\n                  onClick={() => this.setActiveTutorial(tutorial, index)}\r\n                  key={index}\r\n                >\r\n                  {tutorial.name}\r\n                </li>\r\n              ))}\r\n          </ul>\r\n\r\n          <button\r\n            className=\"m-3 btn btn-sm btn-danger\"\r\n            onClick={this.removeAllTutorials}\r\n          >\r\n            Remove All\r\n          </button>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          {currentTutorial ? (\r\n            <div>\r\n              <h4>Tutorial</h4>\r\n              <div>\r\n                <label>\r\n                  <strong>name:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.name}\r\n              </div>\r\n              <div>\r\n                <label>\r\n                  <strong>pw:</strong>\r\n                </label>{\" \"}\r\n                {currentTutorial.pw}\r\n              </div>\r\n              <div>\r\n                {currentTutorial.published ? \"Published\" : \"Pending\"}\r\n              </div>\r\n\r\n              <Link\r\n                to={\"/tutorials/\" + currentTutorial.id}\r\n                className=\"badge badge-warning\"\r\n              >\r\n                Edit\r\n              </Link>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              <p>Please click on a Tutorial...</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AddTutorial from \"./components/add-tutorial.component\";\nimport Tutorial from \"./components/tutorial.component\";\nimport TutorialsList from \"./components/tutorials-list.component\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <a href=\"/tutorials\" className=\"navbar-brand\">\n            bezKoder\n          </a>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/tutorials\"} className=\"nav-link\">\n                Tutorials\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/tutorials\"]} component={TutorialsList} />\n            <Route exact path=\"/add\" component={AddTutorial} />\n            <Route path=\"/tutorials/:id\" component={Tutorial} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceworker.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}